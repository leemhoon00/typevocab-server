name: Test
on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start PostgreSQL
        run: |
          docker run -d -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=typevocab postgres:13.3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{secrets.AWS_ROLE_NAME}}
          role-session-name: github-actions
          aws-region: ap-northeast-2

      - name: Install dependencies
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/typevocab
        run: |
          npm install
          npx prisma db push
          npx prisma generate

      - name: Run tests
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
        run: |
          if ! npm test; then
            echo "Tests failed"
            curl -X POST -H "Authorization: token ${{ secrets.TOKEN }}" -d '{"state": "closed"}' "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/update-branch"
          else
            echo "Tests passed"
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git checkout main
            git merge "${{ github.event.pull_request.head.ref }}"
            git push origin main
            curl -X POST -H "Authorization: token ${{ secrets.TOKEN }}" -d '{"state": "merged"}' "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/update-branch"
          fi
